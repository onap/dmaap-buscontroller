<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.onap.dmaap.buscontroller</groupId>
  <artifactId>buscontroller</artifactId>
  <version>1.0.1</version>
  <name>dmaap-buscontroller</name>
  <parent>
    <groupId>org.onap.oparent</groupId>
    <artifactId>oparent</artifactId>
    <version>0.1.1</version>
    <relativePath/>
  </parent>
  <build>
    <finalName>buscontroller</finalName>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M1</version>
        <executions>
          <execution>
            <id>enforce-no-snapshots</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireReleaseDeps>
                  <message>No Snapshots Allowed!</message>
                  <excludes>
                    <exclude>org.onap.dmaap.dbcapi:dbcapi</exclude>
                  </excludes>
                </requireReleaseDeps>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>

           <!-- Package an Uber jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.3</version>
                <executions>
                    <!-- Run shade goal on package phase -->
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <!-- NOTE: Need the following transformer else gets "Could not resolve type id 'https' into a subtype" error
                                Solution found from here:
                                http://stackoverflow.com/questions/27543060/why-does-dropwizard-configuration-is-not-working
                                Some more context here:
                                https://github.com/dropwizard/dropwizard/issues/455 -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <!-- add Main-Class to manifest file -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>org.onap.dmaap.dbcapi.server.Main</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


<!--Special goal to populate target/libs with dependencies to place in docker image 
	not needed anymore since we are using shade uber jar
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-dependency-plugin</artifactId>
	    <executions>
	      <execution>
		    <phase>install</phase>
		    <goals>
		      <goal>copy-dependencies</goal>
		    </goals>
		    <configuration>
		      <outputDirectory>${project.build.directory}/dependency</outputDirectory>
		    </configuration>
	      </execution>
       </executions>
      </plugin>
-->

      <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.7</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ecomp-staging</serverId>
                    <nexusUrl>${nexusproxy}</nexusUrl>
                    <stagingProfileId>176c31dfe190a</stagingProfileId>
                </configuration>
            </plugin>

      <plugin>
		<groupId>com.spotify</groupId>
		 <artifactId>docker-maven-plugin</artifactId>
		 <version>1.0.0</version>
		 <configuration>
				 <imageName>${onap.nexus.dockerregistry.daily}/${docker.image}</imageName>
			     <dockerDirectory>${project.basedir}</dockerDirectory>
				 <serverId>${onap.nexus.dockerregistry.daily}</serverId>
				 <imageTags>
						 <imageTag>${artifact.version}</imageTag>
						 <imageTag>latest</imageTag>
				 </imageTags>
				 <forceTags>true</forceTags>
				 <resources>
						 <resource>
								 <targetPath>/</targetPath>
								 <directory>${project.basedir}</directory>
								 <excludes>
									<exclude>target/**/*</exclude>
									<exclude>pom.xml</exclude>
								</excludes>
						 </resource>

						 <resource>
								 <targetPath>/</targetPath>
								 <directory>${project.build.directory}</directory>
								 <include>**/**</include>
						 </resource>
				 </resources>
		 </configuration>
		 <executions>
				 <execution>
						 <id>build-image</id>
						 <phase>package</phase>
						 <goals>
								 <goal>build</goal>
						 </goals>
						 <configuration>
								 <skipDockerBuild>${skip.docker.build}</skipDockerBuild>
						 </configuration>
				 </execution>

				 <execution>
						 <id>tag-image-project-version</id>
						 <phase>package</phase>
						 <goals>
								 <goal>tag</goal>
						 </goals>
						 <configuration>
								 <image>${docker.image}</image>
								 <newName>${docker.push.registry}/${docker.image}:${artifact.version}</newName>
								 <skipDockerTag>${skip.docker.push}</skipDockerTag>
						 </configuration>
				 </execution>

				 <execution>
						 <id>tag-image-latest</id>
						 <phase>package</phase>
						 <goals>
								 <goal>tag</goal>
						 </goals>
						 <configuration>
								 <image>${docker.image}</image>
								 <newName>${docker.push.registry}/${docker.image}:latest</newName>
								 <skipDockerTag>${skip.docker.push}</skipDockerTag>
						 </configuration>
				 </execution>

				 <execution>
						 <id>push-image-latest</id>
						 <phase>deploy</phase>
						 <goals>
								 <goal>push</goal>
						 </goals>
						 <configuration>
								 <imageName>${docker.push.registry}/${docker.image}:${artifact.version}</imageName>
								 <skipDockerPush>${skip.docker.push}</skipDockerPush>
						 </configuration>
				 </execution>

				 <execution>
						 <id>push-image</id>
						 <phase>deploy</phase>
						 <goals>
								 <goal>push</goal>
						 </goals>
						 <configuration>
								 <imageName>${docker.push.registry}/${docker.image}:latest</imageName>
								 <skipDockerPush>${skip.docker.push}</skipDockerPush>
						 </configuration>
				 </execution>
		 </executions>
      </plugin>

	<!-- for Distribution management -->
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-site-plugin</artifactId>
		  <version>3.6</version>
		  <dependencies>
			<dependency>
			  <groupId>org.apache.maven.wagon</groupId>
			  <artifactId>wagon-webdav-jackrabbit</artifactId>
			  <version>2.10</version>
			</dependency>
		  </dependencies>
		</plugin>

    </plugins>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.10,)</versionRange>
					    <phase>install</phase>
                        <goals>
                          <goal>copy-dependencies</goal>
                        </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <dependencyManagement>
    <dependencies>
 
      <dependency>
        <groupId>org.glassfish.jersey</groupId>
        <artifactId>jersey-bom</artifactId>
        <version>${jersey.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
        <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-core</artifactId>
        <version>1.5.13</version>
      </dependency>
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-jersey2-jaxrs</artifactId>
        <version>1.5.13</version>
      </dependency>
       <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>1.5.13</version>
      </dependency>   
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet-core</artifactId>
      <!-- use the following artifactId if you don't need servlet 2.x compatibility -->
      <!-- artifactId>jersey-container-servlet</artifactId -->
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-moxy</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jettyVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${jettyVersion}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlets</artifactId>
      <version>${jettyVersion}</version>
      <scope>compile</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple -->
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.6</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>9.4.1208.jre7</version>
    </dependency>
  	<dependency>
		<groupId>com.att.eelf</groupId> 
		<artifactId>eelf-core</artifactId> 
		<version>${eelf.version}</version> 
	</dependency>
	<dependency>
		<groupId>org.onap.dmaap.dbcapi</groupId>
		<artifactId>dbcapi</artifactId>
		<version>1.0.1-SNAPSHOT</version>
	</dependency>
  </dependencies>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.4</version>
        <configuration>
          <failOnError>false</failOnError>
          <doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
          <docletArtifact>
            <groupId>org.umlgraph</groupId>
            <artifactId>umlgraph</artifactId>
            <version>5.6</version>
          </docletArtifact>
          <additionalparam>-views</additionalparam>
          <useStandardDocletOptions>true</useStandardDocletOptions>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <distributionManagement>
	<site>
		<id>ecomp-site</id>
		<url>dav:${nexusproxy}${sitePath}</url>
	</site>
  </distributionManagement>
  <properties>
    <jersey.version>2.16</jersey.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jettyVersion>9.3.7.v20160115</jettyVersion>
    <eelf.version>0.0.1</eelf.version>
    <artifact.version>1.0.1</artifact.version>
		<!--  SONAR  -->
		 <jacoco.version>0.7.7.201606060606</jacoco.version>
	    <sonar-jacoco-listeners.version>3.2</sonar-jacoco-listeners.version>
	    <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
	    <!-- Default Sonar configuration -->
	    <sonar.jacoco.reportPath>target/code-coverage/jacoco-ut.exec</sonar.jacoco.reportPath>
	    <sonar.jacoco.itReportPath>target/code-coverage/jacoco-it.exec</sonar.jacoco.itReportPath>
	    <!-- Note: This list should match jacoco-maven-plugin's exclusion list below -->
	    <sonar.exclusions>**/gen/**,**/generated-sources/**,**/yang-gen**,**/pax/**</sonar.exclusions>

	<!-- docker image -->
		 <docker.image>onap/dmaap/buscontroller</docker.image>

		 <nexusproxy>https://nexus.onap.org</nexusproxy>
		 <docker.push.registry>nexus3.onap.org:10003</docker.push.registry>

	<!-- for Distribution Management -->
		<sitePath>/content/sites/site/org/onap/dmaap/buscontroller/${artifact.version}</sitePath>
  </properties>
  <description>Packaging Platform (DMaaP) Bus Controller API as a Docker container. </description>
</project>
